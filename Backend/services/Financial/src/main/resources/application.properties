spring.application.name=financial
server.port=8071

# Security configuration
spring.security.user.name=user
spring.security.user.password=none
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# MySQL datasource configuration (XAMPP)
spring.datasource.url=jdbc:mysql://localhost:3306/financialdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.show-sql=true

# HikariCP settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2

# Config server
spring.config.import=optional:configserver:http://localhost:8888

# Eureka configuration
eureka.client.service-url.default-zone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true

# Monitoring/Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.prometheus.metrics.export.enabled=true

# Mail Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=zedmain147@gmail.com
spring.mail.password=tipm aczo ngsy acny
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.main.allow-circular-references=true
spring.main.allow-bean-definition-overriding=true
spring.mail.from=zedmain147@gmail.com
logging.level.org.springframework.mail=DEBUG
logging.level.org.eclipse.angus.mail=DEBUG
# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=financial-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Additional Kafka properties
spring.kafka.consumer.properties.spring.json.type.mapping=notificationdto:com.tensai.financial.DTOS.NotificationDTO
spring.kafka.producer.properties.spring.json.type.mapping=notificationdto:com.tensai.financial.DTOS.NotificationDTO
spring.kafka.properties.security.protocol=PLAINTEXT

# Make Kafka connection issues non-fatal
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.listener.ack-mode=RECORD
spring.kafka.consumer.properties.allow.auto.create.topics=true
spring.kafka.admin.auto-create=true
spring.kafka.admin.fail-fast=false
kafka.listener.auto-startup=false

# Payment Gateway Configurations
paypal.client.id=AUZy14wNSMMv-EqT_DPWEvvwbOE3ZovoG8ysD6TFQHUHWYmcE4lHJLiJ4gbzowAdWr6Wfy0C1sO8f0K4
paypal.client.secret=ENUiXFZ9XHCaljoqMvMx2GEbrbDRMzPsPzVgwTrb_GMu7UmE7mQ8ERdEBzQQIhacOnNSnH20hT-hMrn4
paypal.mode=sandbox
stripe.api.key=sk_test_51REEhJRqsEP0VBxEavC0WbHuu8JhJjqgQ2GiXxEGjOmR0dRGN1CGoYq9Xa2RTg0NFP65WGgBP9duaLbPuZmI5HhT005ag9hrAI
